{"version":3,"sources":["data/types.js","components/Item.jsx","data/index.js","components/DropWrapper.jsx","components/Col.jsx","components/ModalWindow.jsx","App.js","index.js"],"names":["ITEM_TYPE","Item","item","index","moveItem","onItemClickHandler","column","ref","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","hoveredRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","type","collect","isDragging","drag","style","opacity","className","onClick","title","content","data","id","columnId","columns","name","icon","color","DropWrapper","onDrop","children","canDrop","initialColIdx","findIndex","nameIndex","includes","isOver","React","cloneElement","Col","Modal","setAppElement","ModalWindow","show","onCloseHandler","onSaveHandler","onDeleteHandler","useEffect","setFormValues","useState","formValues","onChangeHandler","e","target","value","isOpen","onRequestClose","overlayClassName","htmlFor","onChange","App","items","setItems","showModal","setShowModal","itemToEdit","setItemToEdit","prevState","newItems","filter","i","concat","idx","splice","map","backgroundColor","Math","random","push","ReactDOM","render","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.422b867e.chunk.js","sourcesContent":["const ITEM_TYPE = \"ITEM\";\n\nexport default ITEM_TYPE;","import React, { Fragment, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport ITEM_TYPE from \"../data/types\";\n\nconst Item = ({ item, index, moveItem, column, onItemClickHandler }) => {\n  const ref = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ITEM_TYPE,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoveredRect = ref.current.getBoundingClientRect();\n      const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\n      const mousePosition = monitor.getClientOffset();\n      const hoverClientY = mousePosition.y - hoveredRect.top;\n\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveItem(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ITEM_TYPE, ...item, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  drag(drop(ref));\n\n  return (\n    <Fragment>\n      <div\n        ref={ref}\n        style={{ opacity: isDragging ? 0 : 1 }}\n        className={\"item\"}\n        onClick={() => onItemClickHandler(item)}\n      >\n        <p className={\"item-title\"}>\n         \n          {item.title}\n        </p>\n        <p className={\"item-content\"}>{item.content}</p>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Item;\n","const data = [\n  {\n    id: 1,\n    columnId: \"order\",\n    title: \"Установка плит под фундамент 3\",\n    content: \"Содержимое карточки\",\n  },\n  {\n    id: 2,\n    columnId: \"order\",\n    title: \"Земельные работы по подготовке площадки 1\",\n    content: \"Текстовое содержимое \",\n  },\n  {\n    id: 4,\n    columnId: \"progress\",\n    title: \"Земельные работы по подготовке площадки 3\",\n    content: \"Текстовое содержимое \",\n  },\n  {\n    id: 5,\n    columnId: \"review\",\n    title: \"Установка плит под фундамент 1\",\n    content: \"Содержимое карточки\",\n  },\n  {\n    id: 6,\n    columnId: \"done\",\n    title: \"Установка плит под фундамент 2\",\n    content: \"Содержимое карточки\",\n  },\n];\n\nconst columns = [\n  {\n    id: \"order\",\n    name: \"Наряды\",\n    icon: \"⭕️\",\n    color: \"#EB5A46\",\n  },\n  {\n    id: \"progress\",\n    name: \"В работе\",\n    icon: \"🔆️\",\n    color: \"#00C2E0\",\n  },\n  {\n    id: \"review\",\n    name: \"Приёмка\",\n    icon: \"📝\",\n    color: \"#C377E0\",\n  },\n  {\n    id: \"done\",\n    name: \"Завершено\",\n    icon: \"✅\",\n    color: \"#3981DE\",\n  },\n];\n\nexport { data, columns };\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport ITEM_TYPE from \"../data/types\";\nimport { columns } from \"../data\";\n\nconst DropWrapper = ({ onDrop, children, id }) => {\n    const [{ isOver }, drop] = useDrop({\n        accept: ITEM_TYPE,\n        canDrop: (item, monitor) => {\n            const initialColIdx = columns.findIndex(column => column.id === item.columnId);\n            const nameIndex = columns.findIndex(column => column.id === id);\n            return [initialColIdx + 1, initialColIdx - 1, initialColIdx].includes(nameIndex);\n        },\n        drop: (item, monitor) => {\n            onDrop(item, monitor, id);\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver()\n        })\n    });\n\n    return (\n        <div ref={drop} className={\"drop-wrapper\"}>\n            {React.cloneElement(children, { isOver })}\n        </div>\n    )\n};\n\nexport default DropWrapper;","import React from \"react\";\n\nconst Col = ({ isOver, children }) => {\n  const className = isOver ? \" highlight-region\" : \"\";\n\n  return <div className={`col${className}`}>{children}</div>;\n};\n\nexport default Col;\n","import {useState,useEffect} from \"react\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nconst ModalWindow = ({ show, onCloseHandler, onSaveHandler, item, onDeleteHandler }) => {\n  useEffect(()=>{\n    setFormValues(item)\n  },[item])\n\n  const [formValues, setFormValues] = useState(item)\n  const onChangeHandler = (e) => {\n    setFormValues({...formValues,[e.target.id]:e.target.value})\n  }\n\n  return (\n    <Modal\n      isOpen={show}\n      onRequestClose={onCloseHandler}\n      className={\"modal\"}\n      overlayClassName={\"overlay\"}\n    > \n    {formValues &&\n      <div>\n        <div className=\"close-btn-ctn\">\n          <button className=\"close-btn\" onClick={onCloseHandler}> X </button>\n        </div>\n        <div className=\"input-line\">\n          <label htmlFor=\"title\">Заголовок </label>\n          <input id=\"title\" type=\"textarea\" onChange={onChangeHandler} value={formValues.title} />\n        </div>\n        <div  className=\"input-line\">\n          <label htmlFor=\"content\">Содержимое </label>\n          <input id=\"content\" type=\"textarea\" onChange={onChangeHandler} value={formValues.content} />\n        </div>\n        <div>\n          <button className=\"button\" onClick={()=>onSaveHandler(formValues)}> Save </button>\n          <button className=\"button\" onClick={()=>onDeleteHandler(formValues)}> Delete </button>\n          <button className=\"button\" onClick={()=>onCloseHandler(formValues)}> Close </button>\n        </div>\n      </div>\n    }\n    </Modal>\n  );\n};\n\nexport default ModalWindow;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Item from \"./components/Item\";\nimport DropWrapper from \"./components/DropWrapper\";\nimport Col from \"./components/Col\";\nimport { data, columns } from \"./data\";\nimport ModalWindow from \"./components/ModalWindow\";\n\nconst App = () => {\n  const [items, setItems] = useState(data);\n  const [showModal, setShowModal] = useState(false);\n  const [itemToEdit, setItemToEdit] = useState(null);\n\n  const onSaveHandler = (item) => {\n    const newItems = items.filter((i) => i.id !== item.id);\n    newItems.push(item);\n    setItems(newItems);\n    setShowModal(false);\n  };\n\n  const onCloseHandler = () => {\n    setShowModal(false);\n  };\n\n  const onItemClickHandler = (item) => {\n    setItemToEdit(item);\n    setShowModal(true);\n  };\n\n  const onAddHandler = () => {\n    const item = {\n      id: Math.random(),\n      columnId: \"order\",\n      title: \"\",\n      content: \"\",\n    };\n    setItemToEdit(item);\n    setShowModal(true);\n  };\n\n  const onDeleteHandler = (item) => {\n    const newItems = items.filter((i) => i.id !== item.id);\n    setItems(newItems);\n    setShowModal(false);\n  };\n\n  const onDrop = (item, monitor, columnId) => {\n    setItems((prevState) => {\n      const newItems = prevState\n        .filter((i) => i.id !== item.id)\n        .concat({ ...item, columnId });\n      return [...newItems];\n    });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n    setItems((prevState) => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n\n  return (\n    <>\n      <div className={\"row\"}>\n        {columns.map((column) => {\n          return (\n            <div key={column.id} className={\"col-wrapper\"}>\n              <div>\n                <h2 className={\"col-header\"}>\n                  <div className={\"color-bar\"} style={{ backgroundColor: column.color }} />\n                  {column.name}\n                </h2>\n              </div>\n              <DropWrapper onDrop={onDrop} id={column.id}>\n                <Col>\n                  {items\n                    .filter((i) => i.columnId === column.id)\n                    .map((i, idx) => (\n                      <Item\n                        key={i.id}\n                        item={i}\n                        index={idx}\n                        moveItem={moveItem}\n                        column={column}\n                        onItemClickHandler={onItemClickHandler}\n                      />\n                    ))}\n                </Col>\n              </DropWrapper>\n            </div>\n          );\n        })}\n      </div>\n      <button className=\"button\" onClick={onAddHandler}>\n        Добавить тикет\n      </button>\n\n      <ModalWindow\n        item={itemToEdit}\n        onCloseHandler={onCloseHandler}\n        show={showModal}\n        onSaveHandler={onSaveHandler}\n        onDeleteHandler={onDeleteHandler}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nReactDOM.render(\n  <DndProvider backend={HTML5Backend}>\n    <App />\n  </DndProvider>, document.getElementById(\"root\"));"],"sourceRoot":""}