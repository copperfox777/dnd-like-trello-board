{"version":3,"sources":["components/ModalWindow.jsx","data/types.js","components/Item.jsx","data/index.js","components/DropWrapper.jsx","components/Col.jsx","App.js","index.js"],"names":["Modal","setAppElement","ModalWindow","show","onClose","item","isOpen","onRequestClose","className","overlayClassName","style","flex","title","onClick","content","ITEM_TYPE","Item","index","moveItem","column","ref","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","hoveredRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","type","collect","isDragging","drag","useState","setShow","opacity","backgroundColor","color","data","id","columnId","columns","name","icon","DropWrapper","onDrop","children","canDrop","itemIndex","findIndex","nameIndex","includes","isOver","React","cloneElement","Col","App","items","setItems","prevState","newItems","filter","i","concat","idx","splice","map","ReactDOM","render","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.ce5fb9d3.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nconst ModalWindow = ({ show, onClose, item }) => {\n    return (\n        <Modal\n            isOpen={show}\n            onRequestClose={onClose}\n            className={\"modal\"}\n            overlayClassName={\"overlay\"}\n        >\n            <div className={\"close-btn-ctn\"}>\n                <h1 style={{ flex: \"1 90%\" }}>{item.title}</h1>\n                <button className=\"close-btn\" onClick={onClose}>X</button>\n            </div>\n            <div>\n                <h2>Содержимое</h2>\n                <p>{item.content}</p>\n            </div>\n        </Modal>\n    );\n};\n\nexport default ModalWindow;","const ITEM_TYPE = \"ITEM\";\n\nexport default ITEM_TYPE;","import React, { Fragment, useState, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport ModalWindow from \"./ModalWindow\";\nimport ITEM_TYPE from \"../data/types\";\n\nconst Item = ({ item, index, moveItem, column }) => {\n    const ref = useRef(null);\n\n    const [, drop] = useDrop({\n        accept: ITEM_TYPE,\n        hover(item, monitor) {\n            if (!ref.current) {\n                return\n            }\n            const dragIndex = item.index;\n            const hoverIndex = index;\n\n            if (dragIndex === hoverIndex) {\n                return\n            }\n\n            const hoveredRect = ref.current.getBoundingClientRect();\n            const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\n            const mousePosition = monitor.getClientOffset();\n            const hoverClientY = mousePosition.y - hoveredRect.top;\n\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n            moveItem(dragIndex, hoverIndex);\n            item.index = hoverIndex;\n        },\n    });\n\n    const [{ isDragging }, drag] = useDrag({\n        item: { type: ITEM_TYPE, ...item, index },\n        collect: monitor => ({\n            isDragging: monitor.isDragging()\n        })\n    });\n\n    const [show, setShow] = useState(false);\n\n    const onOpen = () => setShow(true);\n\n    const onClose = () => setShow(false);\n\n    drag(drop(ref));\n\n    return (\n        <Fragment>\n            <div\n                ref={ref}\n                style={{ opacity: isDragging ? 0 : 1 }}\n                className={\"item\"}\n                onClick={onOpen}\n            >\n                <div className={\"color-bar\"} style={{ backgroundColor: column.color }}/>\n                <p className={\"item-title\"}>{item.title}</p>\n                </div>\n            <ModalWindow\n                item={item}\n                onClose={onClose}\n                show={show}\n            />\n        </Fragment>\n    );\n};\n\nexport default Item;","const data = [\n  {\n    id: 1,\n    columnId: \"order\",\n    title: \"Установка плит под фундамент 3\",\n    content: \"Содержимое карточки\",\n  },\n  {\n    id: 2,\n    columnId: \"order\",\n    title: \"Земельные работы по подготовке площадки 1\",\n    content: \"Текстовое содержимое \",\n  },\n  {\n    id: 4,\n    columnId: \"progress\",\n    title: \"Земельные работы по подготовке площадки 3\",\n    content: \"Текстовое содержимое \",\n  },\n  {\n    id: 5,\n    columnId: \"review\",\n    title: \"Установка плит под фундамент 1\",\n    content: \"Содержимое карточки\",\n  },\n  {\n    id: 6,\n    columnId: \"done\",\n    title: \"Установка плит под фундамент 2\",\n    content: \"Содержимое карточки\",\n  },\n];\n\nconst columns = [\n  {\n    id: \"order\",\n    name: \"Наряды\",\n    icon: \"⭕️\",\n    color: \"#EB5A46\",\n  },\n  {\n    id: \"progress\",\n    name: \"В работе\",\n    icon: \"🔆️\",\n    color: \"#00C2E0\",\n  },\n  {\n    id: \"review\",\n    name: \"Приёмка\",\n    icon: \"📝\",\n    color: \"#C377E0\",\n  },\n  {\n    id: \"done\",\n    name: \"Завершено\",\n    icon: \"✅\",\n    color: \"#3981DE\",\n  },\n];\n\nexport { data, columns };\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport ITEM_TYPE from \"../data/types\";\nimport { columns } from \"../data\";\n\nconst DropWrapper = ({ onDrop, children, id }) => {\n    const [{ isOver }, drop] = useDrop({\n        accept: ITEM_TYPE,\n        canDrop: (item, monitor) => {\n            const itemIndex = columns.findIndex(column => column.id === item.columnId);\n            const nameIndex = columns.findIndex(column => column.id === id);\n            return [itemIndex + 1, itemIndex - 1, itemIndex].includes(nameIndex);\n        },\n        drop: (item, monitor) => {\n            onDrop(item, monitor, id);\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver()\n        })\n    });\n\n    return (\n        <div ref={drop} className={\"drop-wrapper\"}>\n            {React.cloneElement(children, { isOver })}\n        </div>\n    )\n};\n\nexport default DropWrapper;","import React from \"react\";\n\nconst Col = ({ isOver, children }) => {\n  const className = isOver ? \" highlight-region\" : \"\";\n\n  return <div className={`col${className}`}>{children}</div>;\n};\n\nexport default Col;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Item from \"./components/Item\";\nimport DropWrapper from \"./components/DropWrapper\";\nimport Col from \"./components/Col\";\nimport { data, columns } from \"./data\";\n\nconst App = () => {\n  const [items, setItems] = useState(data);\n\n  const onDrop = (item, monitor, columnId) => {\n    setItems((prevState) => {\n      const newItems = prevState\n        .filter((i) => i.id !== item.id)\n        .concat({ ...item, columnId });\n      return [...newItems];\n    });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n    setItems((prevState) => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n\n  return (\n    <>\n      <div className={\"row\"}>\n        {columns.map((column) => {\n          return (\n            <div key={column.id} className={\"col-wrapper\"}>\n              <h2 className={\"col-header\"}>{column.name}</h2>\n              <DropWrapper onDrop={onDrop} id={column.id}>\n                <Col>\n                  {items\n                    .filter((i) => i.columnId === column.id)\n                    .map((i, idx) => (\n                      <Item\n                        key={i.id}\n                        item={i}\n                        index={idx}\n                        moveItem={moveItem}\n                        column={column}\n                      />\n                    ))}\n                </Col>\n              </DropWrapper>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nReactDOM.render(\n  <DndProvider backend={HTML5Backend}>\n    <App />\n  </DndProvider>, document.getElementById(\"root\"));"],"sourceRoot":""}